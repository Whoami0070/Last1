{"ast":null,"code":"var _jsxFileName = \"/home/koldun/last1/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport Web3 from 'web3'; // Импорт Web3\nimport WalletConnectProvider from '@walletconnect/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\n\n// Функция для получения Web3\nconst getLibrary = provider => {\n  return new Web3(provider); // Создаем Web3 с провайдером\n};\nfunction App() {\n  _s();\n  const {\n    activate,\n    deactivate,\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [connected, setConnected] = useState(false);\n\n  // Функция для подключения через кошелек\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n      setConnected(true);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n    }\n  };\n\n  // Функция для disconnect\n  const disconnectWallet = () => {\n    deactivate();\n    setConnected(false);\n  };\n\n  // Функция для approve токенов (это заглушка)\n  const approveTokens = async () => {\n    if (!account) {\n      console.error('Wallet is not connected!');\n      return;\n    }\n    try {\n      // Здесь можно добавить логику для approve токенов через контракт.\n      console.log('Approve tokens for:', account);\n\n      // Пример для вызова approve через смарт-контракт (подставь свой контракт)\n      // const contract = new library.eth.Contract(ABI, tokenAddress);\n      // await contract.methods.approve(spenderAddress, amount).send({ from: account });\n\n      alert('Tokens approved!');\n    } catch (error) {\n      console.error('Error approving tokens:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !connected ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected with \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: approveTokens,\n        children: \"Approve Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CJ6WP25uVgo4E18wzwW3IBcoA4k=\", false, function () {\n  return [useWeb3React];\n});\n_c = App;\nexport default function AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","Web3ReactProvider","useWeb3React","InjectedConnector","Web3","WalletConnectProvider","jsxDEV","_jsxDEV","injected","supportedChainIds","getLibrary","provider","App","_s","activate","deactivate","account","library","chainId","connected","setConnected","connectWallet","error","console","disconnectWallet","approveTokens","log","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["/home/koldun/last1/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport Web3 from 'web3'; // Импорт Web3\nimport WalletConnectProvider from '@walletconnect/client';\n\nconst injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] });\n\n// Функция для получения Web3\nconst getLibrary = (provider) => {\n  return new Web3(provider); // Создаем Web3 с провайдером\n};\n\nfunction App() {\n  const { activate, deactivate, account, library, chainId } = useWeb3React();\n  const [connected, setConnected] = useState(false);\n\n  // Функция для подключения через кошелек\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n      setConnected(true);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n    }\n  };\n\n  // Функция для disconnect\n  const disconnectWallet = () => {\n    deactivate();\n    setConnected(false);\n  };\n\n  // Функция для approve токенов (это заглушка)\n  const approveTokens = async () => {\n    if (!account) {\n      console.error('Wallet is not connected!');\n      return;\n    }\n\n    try {\n      // Здесь можно добавить логику для approve токенов через контракт.\n      console.log('Approve tokens for:', account);\n\n      // Пример для вызова approve через смарт-контракт (подставь свой контракт)\n      // const contract = new library.eth.Contract(ABI, tokenAddress);\n      // await contract.methods.approve(spenderAddress, amount).send({ from: account });\n\n      alert('Tokens approved!');\n    } catch (error) {\n      console.error('Error approving tokens:', error);\n    }\n  };\n\n  return (\n    <div>\n      {!connected ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <div>\n          <p>Connected with {account}</p>\n          <button onClick={approveTokens}>Approve Tokens</button>\n          <button onClick={disconnectWallet}>Disconnect</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}